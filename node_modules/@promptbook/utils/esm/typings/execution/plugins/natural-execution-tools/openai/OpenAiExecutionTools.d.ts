import type { Prompt } from '../../../../types/Prompt';
import type { NaturalExecutionTools } from '../../../NaturalExecutionTools';
import type { PromptChatResult, PromptCompletionResult } from '../../../PromptResult';
import type { OpenAiExecutionToolsOptions } from './OpenAiExecutionToolsOptions';
/**
 * Execution Tools for calling OpenAI API.
 */
export declare class OpenAiExecutionTools implements NaturalExecutionTools {
    private readonly options;
    /**
     * OpenAI API client.
     */
    private readonly openai;
    constructor(options: OpenAiExecutionToolsOptions);
    /**
     * Calls OpenAI API to use a chat model.
     */
    gptChat(prompt: Prompt): Promise<PromptChatResult>;
    /**
     * Calls OpenAI API to use a complete model.
     */
    gptComplete(prompt: Prompt): Promise<PromptCompletionResult>;
}
/**

 * TODO: Maybe Create some common util for gptChat and gptComplete
 * TODO: Maybe make custom OpenaiError
 */
